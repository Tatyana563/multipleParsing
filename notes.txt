1) https://easyjava.ru/data/jpa/nasledovanie-v-jpa/
join - how we get id?
2) https://thorben-janssen.com/complete-guide-inheritance-strategies-jpa-hibernate/
author @ManyToMany
3) https://docs.jboss.org/hibernate/orm/5.2/userguide/html_single/Hibernate_User_Guide.html#entity-inheritance-joined-table

Among all other inheritance alternatives, the single table strategy performs the best since it requires access to one table only. Because all subclass columns are stored in a single table, itâ€™s not possible to use NOT NULL constraints anymore, so integrity checks must be moved either into the data access layer or enforced through CHECK or TRIGGER constraints.

https://vladmihalcea.com/the-best-way-to-map-the-discriminatorcolumn-with-jpa-and-hibernate/

@DiscriminatorFormula
********************
1) MenuItem
    @ManyToOne
    @JoinColumn(name = "fk_parent_item")
    private MenuItem parentItem;

2) .gitkeep

3) where is section?

************************
select item.id, item.name, count(child.id) as child_count
from esp.menu_item as item
    left join esp.menu_item as child on item.id = child.fk_parent_item
group by item.id, item.name order by child_count;



select item.id, item.name, count(child.id) as child_count
from esp.menu_item as item
    left join esp.menu_item as child on item.id = child.fk_parent_item
group by item.id, item.name
having count(child.id) = 0
order by child_count;
*****************
 <pluginManagement> in parent's pom add
  <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
        </plugins>

for all children
****************
separately implemented in children add
 <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>  individual conf <configuration>
            </plugin>
        </plugins>

1) get amount of correct images from 2 to 5 randomly;
2) generate random positions for correct images from from 0 to 8;
3)from  answerPositions randomly get positions for CaptchaImage;
4) remove these positions from available positions;
5) for other images choose random positions from available positions;
************************************
versions ?
<dependency>
    <groupId>javax.validation</groupId>
    <artifactId>validation-api</artifactId>
    <version>2.0.1.Final</version>
</dependency>
************************************************************************
PROBLEMS:

1) how dto get into  ProductItemHandlerImpl?
2) tehnodom whitelist hangs